jobs:
  - job: MacOS
    dependsOn: Configure
    condition: ne( variables['configure.skipmacos'], 'true' )
    timeoutInMinutes: 300
    variables:
      xcodeVersion: 12.4
      coreBinaryDirectory:  '$(Agent.BuildDirectory)/sitk-build'
      CTEST_CONFIGURATION_TYPE: Release
      DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
      DASHBOARD_GIT_BRANCH: $[ dependencies.Configure.outputs['configure.BuildHash'] ]
    pool:
      vmImage: 'macos-11'
    steps:
      - template: ./git-download-steps.yml
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
      - script: |
          python --version
          sudo python -m pip install setuptools
          sudo python -m pip install ninja scikit-ci-addons
        displayName: 'Install ninja dependency'
      - bash: |
          set -x
          xcode-select -p
          sudo xcode-select -s /Applications/Xcode_$(xcodeVersion).app/Contents/Developer/
          xcode-select -p
          c++ --version
          cmake --version
          ninja --version
        displayName: 'XCode configuration'
      - bash: |
          ctest  -D "dashboard_track:STRING=Package" -S ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/azure.cmake -V -j 2
        displayName: 'Build and test core'
        workingDirectory: $(Agent.BuildDirectory)
        env:
          CTEST_BINARY_DIRECTORY: $(coreBinaryDirectory)
          CTEST_OUTPUT_ON_FALURE: 1
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
          CTEST_CACHE: |
            CMAKE_CXX_FLAGS:STRING=-fvisibility=hidden -fvisibility-inlines-hidden
            CMAKE_C_FLAGS:STRING=-fvisibility=hidden
            CMAKE_OSX_DEPLOYMENT_TARGET=10.9
            ITK_C_OPTIMIZATION_FLAGS:STRING=
            ITK_CXX_OPTIMIZATION_FLAGS:STRING=
            BUILD_DOCUMENTS:BOOL=OFF
            BUILD_EXAMPLES:BOOL=OFF
            BUILD_SHARED_LIBS:BOOL=OFF
            BUILD_TESTING:BOOL=ON
            WRAP_DEFAULT:BOOL=OFF
            SimpleITK_BUILD_DISTRIBUTE:BOOL=ON
      - bash: |
          set -xe
          if GIT_DIR=${BUILD_SOURCESDIRECTORY}/.git git rev-parse "${DASHBOARD_GIT_BRANCH}^{tag}" >/dev/null 2>&1
          then
            COMMIT=${DASHBOARD_GIT_BRANCH}
          else
            COMMIT=$(git rev-parse origin/${DASHBOARD_GIT_BRANCH})
          fi
          Utilities/Maintenance/SourceTarball.bash --tgz --txz --zip $(coreBinaryDirectory)/SimpleITK-build ${COMMIT}
          mkdir -p $(Build.ArtifactStagingDirectory)/archives
          ls -la
          shopt -s extglob
          mv SimpleITK@(Data|)-*@(zip|gz|xz) $(Build.ArtifactStagingDirectory)/archives
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Generate Source and Data Archives
        continueOnError: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)/archives
          artifactName: Archives
      - script: |
          bash $(Build.SourcesDirectory)/Testing/CI/Azure/scripts/mac_build_java.sh
        displayName: Build Java
        continueOnError: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)/java
          artifactName: Java
        continueOnError: true
      - script: |
          bash $(Build.SourcesDirectory)/Testing/CI/Azure/scripts/mac_build_csharp.sh
        displayName: Build CSharp
        continueOnError: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)/csharp
          artifactName: CSharp
        continueOnError: true
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.11'
          architecture: 'x64'
      - bash: ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/scripts/mac_build_python.sh
        displayName: Build Python 311
        continueOnError: true
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.10'
          architecture: 'x64'
      - bash: ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/scripts/mac_build_python.sh
        displayName: Build Python 310
        continueOnError: true
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
      - bash: ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/scripts/mac_build_python.sh
        displayName: Build Python 39
        continueOnError: true
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'
      - bash: ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/scripts/mac_build_python.sh
        displayName: Build Python 38
        continueOnError: true
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
      - bash: ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/scripts/mac_build_python.sh
        displayName: Build Python 37
        continueOnError: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)/python
          artifactName: Python
