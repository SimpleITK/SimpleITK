trigger:
  - master
  - release
variables:
  ExternalDataVersion: 1.2.0
  ctest.cache_extra: ''
pr: none
jobs:
  - job: VisualStudio
    timeoutInMinutes: 0
    strategy:
      maxParallel: 1
      matrix:
        v141-64:
          CTEST_CMAKE_GENERATOR_TOOLSET: v141
          CTEST_CMAKE_GENERATOR_PLATFORM: x64
          CTEST_CONFIGURATION_TYPE: Release
          CTEST_CMAKE_GENERATOR: "Visual Studio 15 2017"
          imageName: 'vs2017-win2016'
        v142-64:
          CTEST_CMAKE_GENERATOR_TOOLSET: v142
          CTEST_CMAKE_GENERATOR_PLATFORM: x64
          CTEST_CONFIGURATION_TYPE: Release
          CTEST_CMAKE_GENERATOR: "Visual Studio 16 2019"
          imageName: 'windows-2019'
        v140-64:
          CTEST_CMAKE_GENERATOR_TOOLSET: v140
          CTEST_CMAKE_GENERATOR_PLATFORM: x64
          CTEST_CONFIGURATION_TYPE: MinSizeRel
          CTEST_CMAKE_GENERATOR: "Visual Studio 15 2017"
          imageName: 'vs2017-win2016'
        v140-32:
          CTEST_CMAKE_GENERATOR_TOOLSET: v140
          CTEST_CMAKE_GENERATOR_PLATFORM: Win32
          CTEST_CONFIGURATION_TYPE: MinSizeRel
          CTEST_CMAKE_GENERATOR: "Visual Studio 15 2017"
          imageName: 'vs2017-win2016'

    pool:
      vmImage: $(imageName)

    steps:
      - template: templates/git-download-steps.yml
      - script: |
          cmake --version
          ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V
        displayName: Build and test
        workingDirectory: $(Agent.BuildDirectory)
        env:
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          CXXFLAGS: /MP
          CFLAGS: /MP

  - job: macOS
    timeoutInMinutes: 0
    strategy:
      maxParallel: 1
      matrix:
        XCode_11:
          imageName: 'macos-10.14'
          xcodeVersion: 11.1
        XCode_10:
          imageName: 'macos-10.14'
          xcodeVersion: 10.2
        XCode_9_4:
          imageName: 'macos-10.14'
          xcodeVersion: 9.4.1
    pool:
      vmImage: $(imageName)

    steps:
      - template: templates/git-download-steps.yml
      - task: UsePythonVersion@0
        displayName: Enable Python
        inputs:
          versionSpec: '3.6'
          architecture: 'x64'
          addToPath: true
      - script: |
          python --version
          sudo python -m pip install setuptools numpy
          sudo python -m pip install ninja scikit-ci-addons
        displayName: 'Install ninja dependency'
      - bash: |
          set -x
          xcode-select -p
          sudo xcode-select -s /Applications/Xcode_$(xcodeVersion).app/Contents/Developer/
          xcode-select -p
          c++ --version
          cmake --version
          ninja --version
          ctest -S ${BUILD_SOURCESDIRECTORY}/Testing/CI/Azure/azure.cmake -V -j 2
        displayName: Build and test
        env:
          CTEST_CONFIGURATION_TYPE: MinSizeRel
          CTEST_OUTPUT_ON_FAILURE: 1
          DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
          ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
          CTEST_CACHE: |
            BUILD_DOCUMENTS:BOOL=OFF
            BUILD_EXAMPLES:BOOL=ON
            BUILD_SHARED_LIBS:BOOL=OFF
            BUILD_TESTING:BOOL=ON
            WRAP_DEFAULT:BOOL=OFF
            WRAP_PYTHON:BOOL=ON
            WRAP_JAVA:BOOL=ON
        workingDirectory: $(Agent.BuildDirectory)
      - script: |
          ci_addons ctest_junit_formatter $(Build.SourcesDirectory)-build > $(Agent.BuildDirectory)/JUnitTestResults.xml
        condition: succeededOrFailed()
        displayName: 'Format CTest output in JUnit format'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "$(Agent.BuildDirectory)/JUnitTestResults.xml"
          testRunTitle: 'CTest $(Agent.OS)'
        condition: succeededOrFailed()
        displayName: 'Publish test results'

  - job: 'LinuxGCC'
    timeoutInMinutes: 360
    pool:
      name: 'Default'
      demands:
      - Agent.OS -equals Linux
    strategy:
      maxParallel: 3
      matrix:
       default: {}
       ITK-master:
         ctest.cache_extra: |
           ITK_GIT_TAG:STRING=master
           CMAKE_CXX_STANDARD:STRING=11
       devtools-3:
         env_file: '/opt/rh/devtoolset-3/enable'
       devtools-4:
         env_file: '/opt/rh/devtoolset-4/enable'
       devtools-6:
         env_file: '/opt/rh/devtoolset-6/enable'
       devtools-7:
         env_file: '/opt/rh/devtoolset-7/enable'
       devtools-8:
         env_file: '/opt/rh/devtoolset-8/enable'
    workspace:
      clean: all
    steps:
        - template: templates/git-download-steps.yml
        - script: |
            [[ ! -z "$(env_file)" ]] && source $(env_file)
            cmake --version
            gcc --version
            ccache -p
            ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V
            ccache --show-stats
          displayName: Build and test
          env:
            CTEST_OUTPUT_ON_FAILURE: 1
            DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
            CTEST_CACHE: |
              BUILD_DOCUMENTS:BOOL=OFF
              BUILD_EXAMPLES:BOOL=ON
              BUILD_SHARED_LIBS:BOOL=OFF
              BUILD_TESTING:BOOL=ON
              WRAP_DEFAULT:BOOL=ON
              CMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
              CMAKE_C_COMPILER_LAUNCHER=/usr/bin/ccache
              $(ctest.cache_extra)
          workingDirectory: $(Agent.BuildDirectory)
