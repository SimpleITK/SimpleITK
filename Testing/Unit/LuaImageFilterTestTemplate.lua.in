--
-- WARNING: DO NOT EDIT THIS FILE!
-- THIS FILE IS AUTOMATICALLY GENERATED BY THE SIMPLEITK BUILD PROCESS.
-- Please look at LuaImageFilterTestTemplate.lua.in to make changes.
--


-- This is Lua code to test ${name}

inputs = 1
$(if number_of_inputs then
    OUT=[[inputs = ${number_of_inputs}]]
  end)

if #arg < inputs + 2 then
  print ( "Usage: ${name} tag <input(s)> output" )
  os.exit ( 1 )
end

tag = arg[1];

reader = SimpleITK.ImageFileReader()
writer = SimpleITK.ImageFileWriter()
filter = SimpleITK.${name}ImageFilter()

$(if #tests == 0 then
    OUT=[[print ( "No tests defined!" ); os.exit ( 1 );]]
  end)

$(foreach tests
  if tag == "${tag}" then
    $(when settings
$(foreach settings
$(if parameter == "SeedList" and lua_value then
    OUT=[[filter:ClearSeeds();
    $(for i=1,#lua_value do OUT=OUT .. "\
    idx = SimpleITK.VectorUInt32();\
    for _,v in ipairs(".. lua_value[i] ..") do idx:push_back(v) end\
    filter:AddSeed( idx );"end)]]
elseif parameter == "SeedList" then
    OUT=[[filter:ClearSeeds();
    $(for i=1,#value do OUT=OUT .. "\
    idx = SimpleITK.VectorUInt32();\
    for _,v in ipairs(".. value[i] ..") do idx:push_back(v) end\
    filter:AddSeed( idx );"end)]]
elseif dim_vec and dim_vec == 1 then
   if type == "bool" then
     OUT="idx = SimpleITK.VectorBool();"
   else
     OUT="idx = SimpleITK.VectorUInt32();"
   end
   
   OUT=OUT.. [[

    for _,v in ipairs($(if lua_value then OUT='${lua_value}' else OUT='${value}' end)) do idx:push_back(v) end
    filter:Set${parameter}( idx );]]
else
OUT=[[
    filter:Set${parameter}( $(if lua_value then OUT='${lua_value}' else OUT='${value}' end) );]]
end)
)
)

    inputA = reader:SetFileName ( arg[2] ):Execute();
    $(when inputB
    inputB = reader:SetFileName ( arg[3] ):Execute()
    )
    output = filter:Execute ( inputA $(when inputB , inputB) )
    writer:SetFileName ( arg[#arg] ):Execute ( output )
  end
)

