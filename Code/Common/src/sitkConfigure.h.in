/*=========================================================================
*
*  Copyright Insight Software Consortium
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*         http://www.apache.org/licenses/LICENSE-2.0.txt
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*=========================================================================*/
#ifndef __sitkConfigure_h
#define __sitkConfigure_h


#cmakedefine SITK_BUILD_SHARED_LIBS
#ifdef SITK_BUILD_SHARED_LIBS
#define SITKDLL
#else
#define SITKSTATIC
#endif


// defined if the system has C++0x "static_assert" keyword
#cmakedefine SITK_SUPPORTS_STATIC_ASSERT

#cmakedefine SITK_INT64_PIXELIDS

#cmakedefine SITK_EXPRESS_INSTANTIATEDPIXELS


// defined if the system has <tr1/functional> header
#cmakedefine SITK_HAS_STLTR1_TR1_FUNCTIONAL
// defined if the system has <functional> header
#cmakedefine SITK_HAS_STLTR1_FUNCTIONAL


// defined if the system has <tr1/type_traits> header
#cmakedefine SITK_HAS_STLTR1_TR1_TYPE_TRAITS
// defined if the system has <type_traits> header
#cmakedefine SITK_HAS_STLTR1_TYPE_TRAITS

// define if new features added from TR1 c++11 are in TR1 namespace
#cmakedefine SITK_HAS_TR1_NAMESPACE
#if SITK_HAS_TR1_NAMESPACE
namespace sitk_tr1 = std::tr1;
#else
namespace sitk_tr1 = std;
#endif


// defined if the system has <tr1/unordered_map> header
#cmakedefine SITK_HAS_STLTR1_TR1_UNORDERED_MAP

// defined if the system has <unordered_map> header
#cmakedefine SITK_HAS_STLTR1_UNORDERED_MAP

// defined with the unordered_map is functional and usable
#cmakedefine SITK_UNORDERED_MAP_FUNCTIONAL

//  SITK_HAS_UNORDERED_MAP is defined when the unordered map should be usedes
#if ( defined SITK_HAS_STLTR1_TR1_UNORDERED_MAP || defined SITK_HAS_STLTR1_UNORDERED_MAP ) && defined SITK_UNORDERED_MAP_FUNCTIONAL
#define SITK_HAS_UNORDERED_MAP
#endif

#if defined(__clang__)
#define CLANG_TEMPLATE template
#else
#define CLANG_TEMPLATE
#endif

// Include ITK version reported in CMake with SITK prefix, so that
// SimpleITK dosen't need ITK header in our headers.
#define SITK_ITK_VERSION_MAJOR @ITK_VERSION_MAJOR@
#define SITK_ITK_VERSION_MINOR @ITK_VERSION_MINOR@
#define SITK_ITK_VERSION_PATCH @ITK_VERSION_PATCH@

#endif // __sitkConfigure_h
