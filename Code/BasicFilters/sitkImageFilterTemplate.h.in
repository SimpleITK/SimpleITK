#ifndef __sitk${name}ImageFilter_h
#define __sitk${name}ImageFilter_h

#include "sitkImageFilter.h"



namespace itk {
  namespace simple {

    class ${name}ImageFilter : public ImageFilter {
    public:
      typedef ${name}ImageFilter Self;

      /**
       * Default Constructor that takes no arguments and initializes
       * default parameters
       */
      ${name}ImageFilter();

      typedef ${pixel_types}  PixelTypeList;

      $(foreach members 
      /** ${doc} */
      Self& Set${name} ( ${type} t ) { this->m_${name} = t; return *this; };
      ${type} Get${name}() { return this->m_${name}; };
      )

      // Print ourselves out
      std::string ToString() const;

      Image::Pointer Execute ( Image::Pointer );
      $(if #members > 0 then
      OUT='Image::Pointer Execute ( Image::Pointer $(foreach members ,${type} in${name} ) );'
      end)

    private:

      sitkSingleImageMemberFunctionDispatcher;

      $(foreach members 
      ${type} m_${name};
      )
    };


  }
}
#endif
