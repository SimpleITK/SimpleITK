{
  "name" : "NeighborhoodConnected",
  "template_code_filename" : "RegionGrowingImageFilter",
  "template_type" : "RegionGrowing",
  "number_of_inputs" : 1,
  "doc" : "Some global documentation",
  "pixel_types" : "BasicPixelIDTypeList",
  "members" : [
    { "name" : "Upper",
      "type" : "double",
      "default" : 1.0,
      "doc" : "Upper threshold value"
    },
    { "name" : "Lower",
      "type" : "double",
      "default" : 0.0,
      "doc" : "Lower threshold value"
    },
    { "name" : "ReplaceValue",
      "type" : "double",
      "default" : 1.0,
      "doc" : "Pixels that lie within Lower and Upper (inclusive)\
       will be replaced with this value. The default is 1."
    },
    { "name" : "Radius",
      "type" : "std::vector<unsigned int>",
      "default" : "std::vector<unsigned int>(3, 1)",
      "doc" : "Radius of the neighborhood used to compute the median",
      "dim_vec" : 1,
      "itk_type" : "typename InputImageType::SizeType"
    }
  ],
  "tests" : [
    { "tag" : "2d",
      "description" : "Run with 2d sample settings",
      "inputA" : "Input/STAPLE1.png",
      "settings" : [
        { "parameter" : "SeedList",
          "dim" : 2,
          "value" : ["{100,100}",
                     "{95,85}"],
          "tcl_value" : ["100 100",
                         "95 85"],
          "python_value" : ["[100,100]",
                            "[95,85]"],
          "ruby_value" : ["[100,100]",
                            "[95,85]"]
        },
        { "parameter" : "Upper",
          "value" : 255
        },
        { "parameter" : "Lower",
          "value" : 150
        },
        { "parameter" : "ReplaceValue",
          "value" : 255
        },
        { "parameter" : "Radius",
          "dim_vec" : 1,
          "value" : "std::vector<unsigned int>(2, 5)",
          "java_value" : "{5,5}",
          "tcl_value" : "[list 5 5]",
          "python_value" : "[5,5]",
          "lua_value" : "{5,5}",
          "ruby_value" : "[5,5]"
        }
        
      ],
      "tolerance" : 0.1
    }
  ]
}
