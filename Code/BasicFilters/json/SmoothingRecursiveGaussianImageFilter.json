{
  "name": "SmoothingRecursiveGaussianImageFilter",
  "template_code_filename": "ImageFilter",
  "template_test_filename": "ImageFilter",
  "doc": "",
  "number_of_inputs": 1,
  "pixel_types": "typelist2::append<BasicPixelIDTypeList, VectorPixelIDTypeList>::type",
  "output_image_type": "typename InputImageType::template RebindImageType<float>",
  "members": [
    {
      "name": "Sigma",
      "type": "double",
      "default": "std::vector<double>(3,1.0)",
      "dim_vec": true,
      "set_as_scalar": true,
      "itk_type": "typename FilterType::SigmaArrayType",
      "custom_itk_cast": "typename FilterType::SigmaArrayType itkVecSigma = sitkSTLVectorToITK<typename FilterType::SigmaArrayType>( this->GetSigma() );\n  filter->SetSigmaArray( itkVecSigma );",
      "doc": "",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set the standard deviation of the Gaussian used for smoothing. Sigma is measured in the units of image spacing. You may use the method SetSigma to set the same value across each axis or use the method SetSigmaArray if you need different values along each axis.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Get the Sigma scalar. If the Sigma is anisotropic, we will just return the Sigma along the first dimension."
    },
    {
      "name": "NormalizeAcrossScale",
      "type": "bool",
      "default": "false",
      "doc": "",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get the flag for normalizing the Gaussian over scale-space. This method does not effect the output of this filter.\n\n\\see RecursiveGaussianImageFilter::SetNormalizeAcrossScale",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get the flag for normalizing the Gaussian over scale-space. This method does not effect the output of this filter.\n\n\\see RecursiveGaussianImageFilter::SetNormalizeAcrossScale"
    }
  ],
  "tests": [
    {
      "tag": "default",
      "description": "Simply run with default settings",
      "settings": [],
      "tolerance": 0.0001,
      "inputs": [
        "Input/RA-Float.nrrd"
      ]
    },
    {
      "tag": "rgb_image",
      "description": "Smooth a vector image",
      "settings": [
        {
          "parameter": "Sigma",
          "type": "double",
          "dim_vec": true,
          "value": [
            5.0,
            5.0,
            5.0
          ]
        }
      ],
      "tolerance": 1e-05,
      "inputs": [
        "Input/VM1111Shrink-RGB.png"
      ]
    }
  ],
  "briefdescription": "Computes the smoothing of an image by convolution with the Gaussian kernels implemented as IIR filters.",
  "detaileddescription": "This filter is implemented using the recursive gaussian filters. For multi-component images, the filter works on each component independently.\n\nFor this filter to be able to run in-place the input and output image types need to be the same and/or the same type as the RealImageType.",
  "itk_module": "ITKSmoothing",
  "itk_group": "Smoothing",
  "in_place": true
}
