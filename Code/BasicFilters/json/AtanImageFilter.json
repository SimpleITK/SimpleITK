{
  "name" : "AtanImageFilter",
  "itk_name" : "UnaryGeneratorImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 1,
  "doc" : "Some global documentation",
  "pixel_types" : "BasicPixelIDTypeList",
  "vector_pixel_types_by_component" : "VectorPixelIDTypeList",
  "filter_type" : "itk::UnaryGeneratorImageFilter< InputImageType, OutputImageType>",
  "custom_set_input" : "filter->SetFunctor( Functor::Atan< typename InputImageType::PixelType, typename OutputImageType::PixelType>() );\n  filter->SetInput(image1);",
  "include_files" : [
    "itkAtanImageFilter.h"
  ],
  "members" : [],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Simply run with default settings",
      "settings" : [],
      "tolerance" : 0.01,
      "inputs" : [
        "Input/Ramp-Zero-One-Float.nrrd"
      ]
    }
  ],
  "briefdescription" : "Computes the one-argument inverse tangent of each pixel.",
  "detaileddescription" : "This filter is templated over the pixel type of the input image and the pixel type of the output image.\n\nThe filter walks over all the pixels in the input image, and for each pixel does the following:\n\n\n\\li cast the pixel value to double , \n\n\\li apply the std::atan() function to the double value, \n\n\\li cast the double value resulting from std::atan() to the pixel type of the output image, \n\n\\li store the cast value into the output image.",
  "itk_module" : "ITKImageIntensity",
  "itk_group" : "ImageIntensity"
}