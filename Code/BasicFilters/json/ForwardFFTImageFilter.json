{
  "name" : "ForwardFFTImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 1,
  "doc" : "Some global documentation",
  "pixel_types" : "RealPixelIDTypeList",
  "filter_type" : "itk::ForwardFFTImageFilter<InputImageType>",
  "members" : [],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Test ForwardFFT",
      "tolerance" : "0.09",
      "settings" : [],
      "inputs" : [
        "Input/RA-Slice-Float.nrrd"
      ]
    }
  ],
  "briefdescription" : "Base class for forward Fast Fourier Transform .",
  "detaileddescription" : "This is a base class for the \"forward\" or \"direct\" discrete Fourier Transform . This is an abstract base class: the actual implementation is provided by the best child class available on the system when the object is created via the object factory system.\n\nThis class transforms a real input image into its full complex Fourier transform. The Fourier transform of a real input image has Hermitian symmetry: \\f$ f(\\mathbf{x}) = f^*(-\\mathbf{x}) \\f$ . That is, when the result of the transform is split in half along the x-dimension, the values in the second half of the transform are the complex conjugates of values in the first half reflected about the center of the image in each dimension.\n\nThis filter works only for real single-component input image types.\n\nThe output generated from a ForwardFFTImageFilter is in the dual space or frequency domain. Refer to FrequencyFFTLayoutImageRegionConstIteratorWithIndex for a description of the layout of frequencies generated after a forward FFT. Also see ITKImageFrequency for a set of filters requiring input images in the frequency domain.\n\n\\see Forward1DFFTImageFilter \n\n\n\\see InverseFFTImageFilter \n\n\n\\see ComplexToComplexFFTImageFilter",
  "itk_module" : "ITKFFT",
  "itk_group" : "FFT",
  "in_place" : false
}
