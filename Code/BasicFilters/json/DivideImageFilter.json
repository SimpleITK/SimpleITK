{
  "name": "DivideImageFilter",
  "template_code_filename": "BinaryFunctorFilter",
  "template_test_filename": "ImageFilter",
  "constant_type": "double",
  "number_of_inputs": 2,
  "doc": "Some global documentation",
  "pixel_types": "typelist2::append<BasicPixelIDTypeList, ComplexPixelIDTypeList>::type",
  "members": [],
  "tests": [
    {
      "tag": "defaults",
      "description": "Simply run with default settings",
      "settings": [],
      "md5hash": "af2d18b65fdfa4f9cb1e84c777b4a72b",
      "inputs": [
        "Input/Ramp-Up-Short.nrrd",
        "Input/Ramp-Down-Short.nrrd"
      ]
    }
  ],
  "briefdescription": "Pixel-wise division of two images.",
  "detaileddescription": "This class is templated over the types of the two input images and the type of the output image. When the divisor is zero, the division result is set to the maximum number that can be represented by default to avoid exception. Numeric conversions (castings) are done by the C++ defaults.",
  "itk_module": "ITKImageIntensity",
  "itk_group": "ImageIntensity",
  "in_place": true
}
