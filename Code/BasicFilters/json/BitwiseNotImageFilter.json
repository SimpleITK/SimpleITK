{
  "name" : "BitwiseNotImageFilter",
  "itk_name" : "UnaryFunctorImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "include_files" : [
    "itkBitwiseNotFunctor.h"
  ],
  "number_of_inputs" : 1,
  "doc" : "Some global documentation",
  "pixel_types" : "IntegerPixelIDTypeList",
  "filter_type" : "itk::UnaryFunctorImageFilter< InputImageType, InputImageType, Functor::BitwiseNot< typename InputImageType::PixelType,typename OutputImageType::PixelType> >",
  "members" : [],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Simply run with default settings",
      "settings" : [],
      "md5hash" : "d63a9f2add11cd86fc3c5cb297222107",
      "inputs" : [
        "Input/2th_cthead1.png"
      ]
    }
  ],
  "briefdescription" : "Implements pixel-wise generic operation on one image.",
  "detaileddescription" : "This class is parameterized over the type of the input image and the type of the output image. It is also parameterized by the operation to be applied, using a Functor style.\n\nUnaryFunctorImageFilter allows the output dimension of the filter to be larger than the input dimension. Thus subclasses of the UnaryFunctorImageFilter (like the CastImageFilter ) can be used to promote a 2D image to a 3D image, etc.\n\n\\see BinaryFunctorImageFilter TernaryFunctorImageFilter \n\n\\par Wiki Examples:\n\n\\li All Examples \n\n\\li Apply a custom operation to each pixel in an image"
}
