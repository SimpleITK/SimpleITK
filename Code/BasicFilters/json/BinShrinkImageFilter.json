{
  "name" : "BinShrinkImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 1,
  "pixel_types" : "NonLabelPixelIDTypeList",
  "public_declarations" : "SITK_RETURN_SELF_TYPE_HEADER SetShrinkFactor( unsigned int s ) { this->m_ShrinkFactors = std::vector<unsigned int>(3, s ); return *this; }",
  "members" : [
    {
      "name" : "ShrinkFactors",
      "type" : "unsigned int",
      "default" : "std::vector<unsigned int>(3, 1)",
      "dim_vec" : 1,
      "doc" : "",
      "itk_type" : "typename FilterType::ShrinkFactorsType",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set the shrink factors. Values are clamped to a minimum value of 1. Default is 1 for all dimensions.",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Get the shrink factors."
    }
  ],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Test Shirnk with default parameters",
      "md5hash" : "45a85203a8972250b0e0226b64312eef",
      "settings" : [],
      "inputs" : [
        "Input/VM1111Shrink-RGBFloat.nrrd"
      ]
    },
    {
      "tag" : "by4",
      "description" : "Test BinShink by 4",
      "md5hash" : "31e1303e610e4ab5393c173a91dcc77b",
      "settings" : [
        {
          "parameter" : "ShrinkFactor",
          "type" : "unsigned int",
          "no_get_method" : 1,
          "value" : "4"
        }
      ],
      "inputs" : [
        "Input/RA-Float.nrrd"
      ]
    }
  ],
  "briefdescription" : "Reduce the size of an image by an integer factor in each dimension while performing averaging of an input neighborhood.",
  "detaileddescription" : "The output image size in each dimension is given by:\n\noutputSize[j] = max( std::floor(inputSize[j]/shrinkFactor[j]), 1 );\n\nThe algorithm implemented can be describe with the following equation for 2D: \\f[ \\mathsf{I}_{out}(x_o,x_1) = \\frac{\\sum_{i=0}^{f_0}\\sum_{j=0}^{f_1}\\mathsf{I}_{in}(f_0 x_o+i,f_1 x_1+j)}{f_0 f_1} \\f] \n\nThis filter is implemented so that the starting extent of the first pixel of the output matches that of the input.\n\nThe change in image geometry from a 5x5 image binned by a factor of 2x2.\n\n\nThis code was contributed in the Insight Journal paper: \"BinShrink: A multi-resolution filter with cache efficient averaging\" by Lowekamp B., Chen D. https://www.insight-journal.org/browse/publication/912",
  "itk_module" : "ITKImageGrid",
  "itk_group" : "ImageGrid",
  "in_place" : false
}
