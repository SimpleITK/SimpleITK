name: PowImageFilter
template_code_filename: BinaryFunctorFilter
template_test_filename: ImageFilter
constant_type: double
number_of_inputs: 2
doc: Some global documentation
pixel_types: typelist2::append<BasicPixelIDTypeList, ComplexPixelIDTypeList>::type
members: []
tests:
- tag: defaults
  description: Simply run with default settings
  settings: []
  tolerance: 0.001
  inputs:
  - Input/RA-Float.nrrd
  - Input/RA-Float.nrrd
briefdescription: Computes the powers of 2 images.
detaileddescription: 'This class is templated over the types of the two input images
  and the type of the output image. Numeric conversions (castings) are done by the
  C++ defaults.


  The output of the pow function will be cast to the pixel type of the output image.


  The total operation over one pixel will be \code

  output_pixel = static_cast< TOutput >( std::pow(static_cast<RealType>(A),static_cast<RealType>(B))
  );


  \endcode



  The pow function can be applied to two images with the following: \code

  SetInput1( image1 );


  SetInput2( image2 );


  \endcode



  Additionally, this filter can be used to raise every pixel of an image to a power
  of a constant by using \code

  SetInput1( image1 );


  SetConstant2( constant );


  \endcode'
itk_module: ITKImageIntensity
itk_group: ImageIntensity
in_place: true
