{
  "name" : "GeodesicActiveContourLevelSetImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 2,
  "doc" : "Level Set filter that uses propagation, curvature and advection terms.",
  "pixel_types" : "RealPixelIDTypeList",
  "filter_type" : "itk::GeodesicActiveContourLevelSetImageFilter<InputImageType, InputImageType>",
  "custom_set_input" : "filter->SetInput( image1 ); filter->SetFeatureImage( image2 );",
  "members" : [
    {
      "name" : "MaximumRMSError",
      "type" : "double",
      "default" : 0.01,
      "doc" : "Value of RMS change below which the filter should stop. This is a convergence criterion."
    },
    {
      "name" : "PropagationScaling",
      "type" : "double",
      "default" : "1.0",
      "doc" : "Weight of direct propagation contribution to the speed term"
    },
    {
      "name" : "CurvatureScaling",
      "type" : "double",
      "default" : "1.0",
      "doc" : "Weight of the curvature contribution to the speed term"
    },
    {
      "name" : "AdvectionScaling",
      "type" : "double",
      "default" : "1.0",
      "doc" : "Weight of the advection contribution to the speed term"
    },
    {
      "name" : "NumberOfIterations",
      "type" : "uint32_t",
      "default" : "1000u",
      "doc" : "Number of iterations to run"
    },
    {
      "name" : "ReverseExpansionDirection",
      "type" : "bool",
      "default" : "false",
      "doc" : "Turn On/Off the flag which determines whether Positive or Negative speed terms will cause surface expansion.  If set to TRUE then negative speed terms will cause the surface to expand and positive speed terms will cause the surface to contract.  If set to FALSE (default) then positive speed terms will cause the surface to expand and negative speed terms will cause the surface to contract.  This method can be safely used to reverse the expansion/contraction as appropriate to a particular application or data set."
    }
  ],
  "measurements" : [
    {
      "name" : "ElapsedIterations",
      "type" : "uint32_t",
      "default" : 0,
      "briefdescriptionGet" : "Number of iterations run."
    },
    {
      "name" : "RMSChange",
      "type" : "double",
      "default" : 0.0,
      "briefdescriptionGet" : "The Root Mean Square of the levelset upon termination."
    }
  ],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Simply run with default settings",
      "settings" : [],
      "tolerance" : 0.1,
      "measurements_results" : [
        {
          "name" : "ElapsedIterations",
          "value" : 20,
          "tolerance" : 5
        },
        {
          "name" : "RMSChange",
          "value" : 0.0,
          "tolerance" : 0.01
        }
      ],
      "inputs" : [
        "Input/SmallWhiteCircle_Float.nrrd",
        "Input/LargeWhiteCircle_Float.nrrd"
      ]
    }
  ],
  "briefdescription" : "Segments structures in images based on a user supplied edge potential map.",
  "detaileddescription" : "\\par IMPORTANT\nThe SegmentationLevelSetImageFilter class and the GeodesicActiveContourLevelSetFunction class contain additional information necessary to gain full understanding of how to use this filter.\n\n\\par OVERVIEW\nThis class is a level set method segmentation filter. An initial contour is propagated outwards (or inwards) until it ''sticks'' to the shape boundaries. This is done by using a level set speed function based on a user supplied edge potential map.\n\n\\par INPUTS\nThis filter requires two inputs. The first input is a initial level set. The initial level set is a real image which contains the initial contour/surface as the zero level set. For example, a signed distance function from the initial contour/surface is typically used. Unlike the simpler ShapeDetectionLevelSetImageFilter the initial contour does not have to lie wholly within the shape to be segmented. The initial contour is allow to overlap the shape boundary. The extra advection term in the update equation behaves like a doublet and attracts the contour to the boundary. This approach for segmentation follows that of Caselles et al (1997).\n\n\\par \nThe second input is the feature image. For this filter, this is the edge potential map. General characteristics of an edge potential map is that it has values close to zero in regions near the edges and values close to one inside the shape itself. Typically, the edge potential map is compute from the image gradient, for example:\n\n \\f[ g(I) = 1 / ( 1 + | (\\nabla * G)(I)| ) \\f] \\f[ g(I) = \\exp^{-|(\\nabla * G)(I)|} \\f] \n\nwhere \\f$ I \\f$ is image intensity and \\f$ (\\nabla * G) \\f$ is the derivative of Gaussian operator.\n\n\\par \nSee SegmentationLevelSetImageFilter and SparseFieldLevelSetImageFilter for more information on Inputs.\n\n\\par PARAMETERS\nThe PropagationScaling parameter can be used to switch from propagation outwards (POSITIVE scaling parameter) versus propagating inwards (NEGATIVE scaling parameter).\n\nThis implementation allows the user to set the weights between the propagation, advection and curvature term using methods SetPropagationScaling() , SetAdvectionScaling() , SetCurvatureScaling() . In general, the larger the CurvatureScaling, the smoother the resulting contour. To follow the implementation in Caselles et al paper, set the PropagationScaling to \\f$ c \\f$ (the inflation or ballon force) and AdvectionScaling and CurvatureScaling both to 1.0.\n\n\\par OUTPUTS\nThe filter outputs a single, scalar, real-valued image. Negative values in the output image represent the inside of the segmented region and positive values in the image represent the outside of the segmented region. The zero crossings of the image correspond to the position of the propagating front.\n\n\\par \nSee SparseFieldLevelSetImageFilter and SegmentationLevelSetImageFilter for more information.\n\n\\par REFERENCES\n\n\n\\par \n\"Geodesic Active Contours\", V. Caselles, R. Kimmel and G. Sapiro. International Journal on Computer Vision, Vol 22, No. 1, pp 61-97, 1997\n\n\\see SegmentationLevelSetImageFilter \n\n\\see GeodesicActiveContourLevelSetFunction \n\n\\see SparseFieldLevelSetImageFilter"
}
