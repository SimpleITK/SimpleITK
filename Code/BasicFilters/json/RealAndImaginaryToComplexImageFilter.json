{
  "name" : "RealAndImaginaryToComplexImageFilter",
  "itk_name" : "ComposeImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 2,
  "doc" : "Some global documentation",
  "pixel_types" : "RealPixelIDTypeList",
  "filter_type" : "itk::ComposeImageFilter<InputImageType, OutputImageType>",
  "output_pixel_type" : "std::complex<typename InputImageType::PixelType>",
  "members" : [],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Test defaults",
      "md5hash" : "1129328e636444d9df8000a1bdebddce",
      "settings" : [],
      "inputs" : [
        "Input/RA-Slice-Float.nrrd",
        "Input/RA-Slice-Float.nrrd"
      ]
    }
  ],
  "briefdescription" : "ComposeImageFilter combine several scalar images into a multicomponent image.",
  "detaileddescription" : "ComposeImageFilter combine several scalar images into an itk::Image of vector pixel (itk::Vector , itk::RGBPixel , ...), of std::complex pixel, or in an itk::VectorImage .\n\n\\par Inputs and Usage\n\\code\n* filter->SetInput( 0, image0 );\n\n* filter->SetInput( 1, image1 );\n\n* ...\n\n* filter->Update();\n\n* itk::VectorImage< PixelType, dimension >::Pointer = filter->GetOutput();\n\n* \n\n\\endcode\n All input images are expected to have the same template parameters and have the same size and origin.\n\n\\see VectorImage \n\n\\see VectorIndexSelectionCastImageFilter \n\n\\par Wiki Examples:\n\n\\li All Examples \n\n\\li Create a vector image from a collection of scalar images \n\n\\li Compose a vector image (with 3 components) from three scalar images \n\n\\li Convert a real image and an imaginary image to a complex image"
}
