{
  "name": "RealAndImaginaryToComplexImageFilter",
  "itk_name": "ComposeImageFilter",
  "template_code_filename": "ImageFilter",
  "template_test_filename": "ImageFilter",
  "number_of_inputs": 2,
  "doc": "Some global documentation",
  "pixel_types": "RealPixelIDTypeList",
  "filter_type": "itk::ComposeImageFilter<InputImageType, OutputImageType>",
  "output_pixel_type": "std::complex<typename InputImageType::PixelType>",
  "members": [],
  "tests": [
    {
      "tag": "defaults",
      "description": "Test defaults",
      "md5hash": "1129328e636444d9df8000a1bdebddce",
      "settings": [],
      "inputs": [
        "Input/RA-Slice-Float.nrrd",
        "Input/RA-Slice-Float.nrrd"
      ]
    }
  ],
  "briefdescription": "ComposeImageFilter combine several scalar images into a multicomponent image.",
  "detaileddescription": "ComposeImageFilter combine several scalar images into an itk::Image of vector pixel (itk::Vector , itk::RGBPixel , ...), of std::complex pixel, or in an itk::VectorImage .\n\n\\par Inputs and Usage\n\\code\nfilter->SetInput( 0, image0 );\n\nfilter->SetInput( 1, image1 );\n\n...\n\nfilter->Update();\n\nitk::VectorImage< PixelType, dimension >::Pointer = filter->GetOutput();\n\n\\endcode\n All input images are expected to have the same template parameters and have the same size and origin.\n\n\n\\see VectorImage \n\n\n\\see VectorIndexSelectionCastImageFilter",
  "itk_module": "ITKImageCompose",
  "itk_group": "ImageCompose",
  "in_place": false
}
