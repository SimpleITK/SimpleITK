{
  "name" : "LessImageFilter",
  "itk_name" : "BinaryFunctorImageFilter",
  "template_code_filename" : "BinaryFunctorFilter",
  "template_test_filename" : "ImageFilter",
  "constant_type" : "double",
  "number_of_inputs" : 2,
  "doc" : "Some global documentation",
  "pixel_types" : "BasicPixelIDTypeList",
  "output_pixel_type" : "uint8_t",
  "filter_type" : "itk::BinaryFunctorImageFilter<InputImageType,InputImageType2,OutputImageType, itk::Functor::Less< typename InputImageType::PixelType, typename InputImageType2::PixelType, typename OutputImageType::PixelType> >",
  "include_files" : [
    "itkLogicOpsFunctors.h"
  ],
  "members" : [
    {
      "name" : "BackgroundValue",
      "type" : "uint8_t",
      "default" : "0u",
      "custom_itk_cast" : "filter->GetFunctor().SetBackgroundValue( static_cast<typename OutputImageType::PixelType>( this->m_BackgroundValue ) );",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set/Get the value used to mark the false pixels of the operator.\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Set/Get the value used to mark the false pixels of the operator.\n"
    },
    {
      "name" : "ForegroundValue",
      "type" : "uint8_t",
      "default" : "1u",
      "custom_itk_cast" : "filter->GetFunctor().SetForegroundValue( static_cast<typename OutputImageType::PixelType>( this->m_ForegroundValue ) );",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set/Get the value used to mark the true pixels of the operator.\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Set/Get the value used to mark the true pixels of the operator.\n"
    }
  ],
  "tests" : [
    {
      "tag" : "default",
      "description" : "same images",
      "settings" : [],
      "md5hash" : "fcd6bcb56c1689fcef28b57c22475bad",
      "inputs" : [
        "Input/cthead1.png",
        "Input/cthead1.png"
      ]
    },
    {
      "tag" : "rampVramp",
      "description" : "2D",
      "settings" : [],
      "md5hash" : "c23ac004a9de8cfc66224a9a7ddb9b25",
      "inputs" : [
        "Input/Ramp-Up-Short.nrrd",
        "Input/Ramp-Down-Short.nrrd"
      ]
    }
  ],
  "briefdescription" : "Implements pixel-wise generic operation of two images, or of an image and a constant.",
  "detaileddescription" : "This class is parameterized over the types of the two input images and the type of the output image. It is also parameterized by the operation to be applied. A Functor style is used.\n\nThe constant must be of the same type than the pixel type of the corresponding image. It is wrapped in a SimpleDataObjectDecorator so it can be updated through the pipeline. The SetConstant() and GetConstant() methods are provided as shortcuts to set or get the constant value without manipulating the decorator.\n\n\\see UnaryFunctorImageFilter TernaryFunctorImageFilter \n\n\\par Wiki Examples:\n\n\\li All Examples \n\n\\li Apply a predefined operation to corresponding pixels in two images \n\n\\li Apply a custom operation to corresponding pixels in two images"
}
