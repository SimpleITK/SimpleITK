{
  "name": "GrayscaleGeodesicDilateImageFilter",
  "template_code_filename": "ImageFilter",
  "template_test_filename": "ImageFilter",
  "number_of_inputs": 2,
  "doc": "Input1 is input, Input2 is marker image",
  "pixel_types": "BasicPixelIDTypeList",
  "filter_type": "itk::GrayscaleGeodesicDilateImageFilter<InputImageType, OutputImageType>",
  "members": [
    {
      "name": "RunOneIteration",
      "type": "bool",
      "default": "false",
      "doc": "",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get whether the filter should run one iteration or until convergence. When run to convergence, this filter is equivalent to \"reconstruction by dilation\". Default is off.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get whether the filter should run one iteration or until convergence. When run to convergence, this filter is equivalent to \"reconstruction by dilation\". Default is off."
    },
    {
      "name": "FullyConnected",
      "type": "bool",
      "default": "false",
      "doc": "",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get whether the connected components are defined strictly by face connectivity or by face+edge+vertex connectivity. Default is FullyConnectedOff. For objects that are 1 pixel wide, use FullyConnectedOn.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get whether the connected components are defined strictly by face connectivity or by face+edge+vertex connectivity. Default is FullyConnectedOff. For objects that are 1 pixel wide, use FullyConnectedOn."
    }
  ],
  "custom_methods": [],
  "tests": [
    {
      "tag": "GrayscaleGeodesicDilate1",
      "description": "Test grayscale geodesic dilate",
      "md5hash": "301858f5eee39b092d28d9837f008fb8",
      "settings": [
        {
          "parameter": "RunOneIteration",
          "value": "false",
          "python_value": "False",
          "R_value": "FALSE"
        },
        {
          "parameter": "FullyConnected",
          "value": "true",
          "python_value": "True",
          "R_value": "TRUE"
        }
      ],
      "inputs": [
        "Input/STAPLE1.png",
        "Input/STAPLE2.png"
      ]
    },
    {
      "tag": "GrayscaleGeodesicDilate2",
      "description": "Test grayscale geodesic dilate, one iteration",
      "md5hash": "512b043be99c423638db7cb7bc6fb2df",
      "settings": [
        {
          "parameter": "RunOneIteration",
          "value": "true",
          "python_value": "True",
          "R_value": "TRUE"
        },
        {
          "parameter": "FullyConnected",
          "value": "true",
          "python_value": "True",
          "R_value": "TRUE"
        }
      ],
      "inputs": [
        "Input/STAPLE1.png",
        "Input/STAPLE2.png"
      ]
    }
  ],
  "briefdescription": "Geodesic grayscale dilation of an image.",
  "detaileddescription": "Geodesic dilation operates on a \"marker\" image and a \"mask\" image. The marker image is dilated using an elementary structuring element (neighborhood of radius one using only the face connected neighbors). The resulting image is then compared with the mask image. The output image is the pixelwise minimum of the dilated marker image and the mask image.\n\nGeodesic dilation is run either one iteration or until convergence. In the convergence case, the filter is equivalent to \"reconstruction by dilation\". This filter is implemented to handle both scenarios. The one iteration case is multi-threaded. The convergence case is delegated to another instance of the same filter (but configured to run a single iteration).\n\nThe marker image must be less than or equal to the mask image (on a pixel by pixel basis).\n\nGeodesic morphology is described in Chapter 6 of Pierre Soille's book \"Morphological Image Analysis: Principles and Applications\", Second Edition, Springer, 2003.\n\nA noniterative version of this algorithm can be found in the ReconstructionByDilationImageFilter . This noniterative solution is much faster than the implementation provided here. All ITK filters that previously used GrayscaleGeodesicDilateImageFilter as part of their implementation have been converted to use the ReconstructionByDilationImageFilter . The GrayscaleGeodesicDilateImageFilter is maintained for backward compatibility.\n\n\\see MorphologyImageFilter , GrayscaleDilateImageFilter , GrayscaleFunctionDilateImageFilter , BinaryDilateImageFilter , ReconstructionByDilationImageFilter",
  "itk_module": "ITKMathematicalMorphology",
  "itk_group": "MathematicalMorphology",
  "in_place": false
}
