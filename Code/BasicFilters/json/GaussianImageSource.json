{
  "name": "GaussianImageSource",
  "template_code_filename": "ImageSource",
  "template_test_filename": "ImageFilter",
  "doc": "",
  "number_of_inputs": 0,
  "pixel_types": "BasicPixelIDTypeList",
  "output_image_type": "TImageType",
  "filter_type": "itk::GaussianImageSource<OutputImageType>",
  "members": [
    {
      "name": "OutputPixelType",
      "type": "PixelIDValueEnum",
      "default": "itk::simple::sitkFloat32",
      "custom_itk_cast": ""
    },
    {
      "name": "Size",
      "type": "unsigned int",
      "dim_vec": true,
      "default": "std::vector<unsigned int>(3, 64)",
      "itk_type": "typename FilterType::SizeType"
    },
    {
      "name": "Sigma",
      "type": "double",
      "dim_vec": true,
      "set_as_scalar": true,
      "default": "std::vector<double>(3, 16.0)",
      "itk_type": "typename FilterType::ArrayType",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get the standard deviation in each direction.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get the standard deviation in each direction."
    },
    {
      "name": "Mean",
      "type": "double",
      "dim_vec": true,
      "set_as_scalar": true,
      "default": "std::vector<double>(3, 32.0)",
      "itk_type": "typename FilterType::ArrayType",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get the mean in each direction.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get the mean in each direction."
    },
    {
      "name": "Scale",
      "type": "double",
      "default": "255",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Gets and sets for Gaussian parameters Set/Get the scale factor to multiply the true value of the Gaussian.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Gets and sets for Gaussian parameters Set/Get the scale factor to multiply the true value of the Gaussian."
    },
    {
      "name": "Origin",
      "type": "double",
      "dim_vec": true,
      "default": "std::vector<double>(3, 0.0)",
      "itk_type": "typename FilterType::PointType"
    },
    {
      "name": "Spacing",
      "type": "double",
      "dim_vec": true,
      "default": "std::vector<double>(3, 1.0)",
      "itk_type": "typename FilterType::SpacingType"
    },
    {
      "name": "Direction",
      "type": "std::vector<double>",
      "default": "std::vector<double>()",
      "doc": "Passing a zero sized array, defaults to identiy matrix. The size of the array must exactly match the direction matrix for the dimension of the image.",
      "custom_itk_cast": "filter->SetDirection( sitkSTLToITKDirection<typename FilterType::DirectionType>( this->m_Direction ) );"
    },
    {
      "name": "Normalized",
      "type": "bool",
      "default": "false",
      "briefdescriptionSet": "",
      "detaileddescriptionSet": "Set/Get whether or not to normalize the Gaussian. Default is false.",
      "briefdescriptionGet": "",
      "detaileddescriptionGet": "Set/Get whether or not to normalize the Gaussian. Default is false."
    }
  ],
  "tests": [
    {
      "tag": "default",
      "description": "Simply run with default settings",
      "settings": [],
      "tolerance": 1e-05,
      "inputs": []
    }
  ],
  "briefdescription": "Generate an n-dimensional image of a Gaussian.",
  "detaileddescription": "GaussianImageSource generates an image of a Gaussian. m_Normalized determines whether or not the Gaussian is normalized (whether or not the sum over infinite space is 1.0) When creating an image, it is preferable to not normalize the Gaussian m_Scale scales the output of the Gaussian to span a range larger than 0->1, and is typically set to the maximum value of the output data type (for instance, 255 for uchars)\n\nThe output image may be of any dimension.",
  "itk_module": "ITKImageSources",
  "itk_group": "ImageSources",
  "in_place": false
}
