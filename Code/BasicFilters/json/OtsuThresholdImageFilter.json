{
  "name" : "OtsuThresholdImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "doc" : "Docs",
  "number_of_inputs" : 0,
  "pixel_types" : "BasicPixelIDTypeList",
  "output_image_type" : "itk::Image< uint8_t, TImageType::ImageDimension>",
  "filter_type" : "itk::OtsuThresholdImageFilter< TImageType, OutputImageType, OutputImageType >",
  "inputs" : [
    {
      "name" : "Image",
      "type" : "Image"
    },
    {
      "name" : "MaskImage",
      "type" : "Image",
      "optional" : true
    }
  ],
  "members" : [
    {
      "name" : "InsideValue",
      "type" : "uint8_t",
      "default" : "1u",
      "pixeltype" : "Output",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set the \"inside\" pixel value. The default value NumericTraits<OutputPixelType>::max()\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Get the \"inside\" pixel value.\n"
    },
    {
      "name" : "OutsideValue",
      "type" : "uint8_t",
      "default" : "0u",
      "pixeltype" : "Output",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set the \"outside\" pixel value. The default value NumericTraits<OutputPixelType>::Zero.\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Get the \"outside\" pixel value.\n"
    },
    {
      "name" : "NumberOfHistogramBins",
      "type" : "uint32_t",
      "default" : "128u",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set/Get the number of histogram bins. Defaults is 128.\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : ""
    },
    {
      "name" : "MaskOutput",
      "type" : "bool",
      "default" : "true",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Do you want the output to be masked by the mask used in histogram construction. Only relevant if masking is in use.",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : ""
    },
    {
      "name" : "MaskValue",
      "type" : "uint8_t",
      "default" : "255u",
      "pixeltype" : "Output",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "The value in the mask image, if used, indicating voxels that should be included. Default is the max of pixel type, as in the MaskedImageToHistogramFilter",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : ""
    },
    {
      "name" : "ReturnBinMidpoint",
      "type" : "bool",
      "default" : "false",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Should the threshold value be mid-point of the bin or the maximum? Default is to return bin maximum.",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : "Should the threshold value be mid-point of the bin or the maximum? Default is to return bin maximum."
    }
  ],
  "measurements" : [
    {
      "name" : "Threshold",
      "type" : "double",
      "default" : 0.0,
      "briefdescriptionGet" : "Get the computed threshold."
    }
  ],
  "tests" : [
    {
      "tag" : "default",
      "description" : "Default parameter settings",
      "settings" : [],
      "md5hash" : "5cad88b6933e76fe8d4e247df9aea78c",
      "inputs" : [
        "Input/RA-Short.nrrd"
      ],
      "measurements_results" : [
        {
          "name" : "Threshold",
          "value" : 27735.0
        }
      ]
    },
    {
      "tag" : "cthead1_with_mask",
      "description" : "CT Head with mask",
      "settings" : [
        {
          "parameter" : "ReturnBinMidpoint",
          "value" : "true",
          "python_value" : "True",
          "R_value" : "TRUE"
        }
      ],
      "md5hash" : "65b36b85ce17ca4458c30a51eada3d47",
      "inputs" : [
        "Input/cthead1.png",
        "Input/cthead1-mask.png"
      ],
      "measurements_results" : [
        {
          "name" : "Threshold",
          "value" : 186.0
        }
      ]
    },
    {
      "tag" : "cthead1_with_unmask",
      "description" : "CT Head with unmask",
      "settings" : [
        {
          "parameter" : "MaskOutput",
          "value" : "false",
          "python_value" : "False",
          "R_value" : "FALSE"
        },
        {
          "parameter" : "ReturnBinMidpoint",
          "value" : "true",
          "python_value" : "True",
          "R_value" : "TRUE"
        }
      ],
      "md5hash" : "bfaba8593ac8ace80316c9e17f378f08",
      "inputs" : [
        "Input/cthead1.png",
        "Input/cthead1-mask.png"
      ],
      "measurements_results" : [
        {
          "name" : "Threshold",
          "value" : 186.0
        }
      ]
    },
    {
      "tag" : "default_on_float",
      "description" : "Default parameter settings",
      "settings" : [],
      "md5hash" : "c7b19aed2d9af9ac82e19fc8756edf99",
      "inputs" : [
        "Input/Ramp-Zero-One-Float.nrrd"
      ],
      "measurements_results" : [
        {
          "name" : "Threshold",
          "value" : 0.50002,
          "tolerance" : 0.0001
        }
      ]
    }
  ],
  "briefdescription" : "Threshold an image using the Otsu Threshold.",
  "detaileddescription" : "This filter creates a binary thresholded image that separates an image into foreground and background components. The filter computes the threshold using the OtsuThresholdCalculator and applies that threshold to the input image using the BinaryThresholdImageFilter .\n\n\\author Richard Beare \n\n\n\\author Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA de Jouy-en-Josas, France.\n\n\nThis implementation was taken from the Insight Journal paper: https://www.insight-journal.org/browse/publication/811 \n\n\\see HistogramThresholdImageFilter",
  "itk_module" : "ITKThresholding",
  "itk_group" : "Thresholding",
  "in_place" : false
}
